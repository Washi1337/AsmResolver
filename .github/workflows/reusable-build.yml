name: ðŸ”’Reusable Workflow Build for Tests

on:
  workflow_call:
    inputs:
      image:
        required: true
        type: string
        description: 'The image to use'
      architecture:
        required: true
        type: string
        description: 'The architecture to use'
      build_configuration:
        required: true
        type: string
        description: 'The build configuration to use'

env:
  # Disable the .NET logo in the console output.
  DOTNET_NOLOGO: true
  # Disable the .NET first time experience to skip caching NuGet packages and speed up the build.
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true
  # Disable sending .NET CLI telemetry to Microsoft.
  DOTNET_CLI_TELEMETRY_OPTOUT: true

jobs:
  get-version:
    name: Calculating Version Suffix
    runs-on: ubuntu-22.04
    outputs:
      version_suffix: ${{ steps.set-vars.outputs.version_suffix }}
    steps:
      - uses: actions/checkout@v4

      - id: git-vars
        name: Get git branch information
        shell: bash
        run: |
          echo "##[set-output name=git_branch;]$(echo $GITHUB_REF)"
          echo "::set-output name=git_hash::$(git rev-parse --short HEAD)"

      - id: set-vars
        uses: actions/github-script@v7
        with:
          script: |
            let runNumber = "${{ github.run_number }}"; 
            let gitHash = "${{ steps.git-vars.outputs.git_hash }}";
            let rawGitRef = "${{ steps.git-vars.outputs.git_branch }}";
            console.log("rawGitRef: " + rawGitRef);
            let gitRef = rawGitRef.replace(/^refs\/heads\//, "").replace(/^refs\/heads\//, "").replace(/[_//!@#$%&]/g, "-");
            if(gitRef.indexOf("refs/pull/") === 0) {
              gitRef = "pr-" + gitRef.substring(10, gitRef.lastIndexOf("/"));
            }
            var versSuffix = `${gitRef}.${runNumber}+${gitHash}`;
            console.log(versSuffix);
            core.setOutput("version_suffix", versSuffix);

  build:
    name: Upload Test Build Output Cache
    runs-on: ${{inputs.image}}
    needs: [get-version]
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v4

      - name: Add msbuild to PATH
        uses: microsoft/setup-msbuild@v2

      - name: Setup .NET
        uses: actions/setup-dotnet@v4

      - name: Build on master branch
        if: ${{github.ref == 'refs/heads/master'}}
        run: |
          dotnet restore AsmResolver.sln;
          msbuild AsmResolver.sln -property:Configuration=${{inputs.build_configuration}} -property:Platform=${{inputs.architecture}};
      
      - name: Build on non-master branch
        if: ${{github.ref != 'refs/heads/master'}}
        run: |
          dotnet restore AsmResolver.sln /p:VersionSuffix=${{needs.get-version.outputs.version_suffix}};
          msbuild AsmResolver.sln -property:Configuration=${{inputs.build_configuration}} -property:Platform=${{inputs.architecture}} -property:VersionSuffix=${{needs.get-version.outputs.version_suffix}};

      - name: Upload Build Artifacts
        uses: ./.github/actions/test-build-artifacts-upload
        with:
          image: ${{inputs.image}}
          architecture: ${{inputs.architecture}}
          build_configuration: ${{inputs.build_configuration}}

      - name: Upload Build Cache
        uses: ./.github/actions/test-build-cache-upload
        with:
          image: ${{inputs.image}}
          architecture: ${{inputs.architecture}}
          build_configuration: ${{inputs.build_configuration}}
