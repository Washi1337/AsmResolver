name: ðŸ”’Reusable Workflow Publish

on:
  workflow_call:
    inputs:
      image:
        required: true
        type: string
        description: 'The image to use'
      architecture:
        required: true
        type: string
        description: 'The architecture to use'
      build_configuration:
        required: true
        type: string
        description: 'The build configuration to use'
    secrets:
      NUGET_API_KEY:
        required: true
      NIGHTLY_NUGET_API_KEY:
        required: true
      NIGHTLY_NUGET_SOURCE:
        required: true

env:
  # Disable the .NET logo in the console output.
  DOTNET_NOLOGO: true
  # Disable the .NET first time experience to skip caching NuGet packages and speed up the build.
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true
  # Disable sending .NET CLI telemetry to Microsoft.
  DOTNET_CLI_TELEMETRY_OPTOUT: true

jobs:
  publish:
    name: Publish NuGet Packages from Build Output Cache
    runs-on: ubuntu-22.04
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4

      - name: Download Build Cache
        uses: ./.github/actions/test-build-cache-download
        with:
            image: ${{inputs.image}}
            architecture: ${{inputs.architecture}}
            build_configuration: ${{inputs.build_configuration}}

      - name: Push to NuGet
        if: ${{github.ref == 'refs/heads/master'}}
        run: dotnet nuget push "./artifacts/**/*.nupkg" -k ${{secrets.NUGET_API_KEY}} --skip-duplicate
        shell: pwsh

      - name: Push to NuGet Nightly
        if: ${{github.ref == 'refs/heads/development'}}
        run: dotnet nuget push "./artifacts/**/*.nupkg" -k ${{secrets.NIGHTLY_NUGET_API_KEY}} -s ${{secrets.NIGHTLY_NUGET_SOURCE}} --skip-duplicate
        shell: pwsh
